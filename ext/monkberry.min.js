(function(document){function Monkberry(){this.parent=null;this.nested=[];this.nodes=[];this.filters=null;this.directives=null;this.context=null;this.unbind=null;this.onRender=null;this.onUpdate=null;this.onRemove=null}Monkberry.render=function(template,node,options){var view;if(options&&options.noCache){view=new template}else{view=template.pool.pop()||new template}if(node.nodeType==8){view.insertBefore(node)}else{view.appendTo(node)}if(options){if(options.parent){view.parent=options.parent}if(options.context){view.context=options.context}if(options.filters){view.filters=options.filters}if(options.directives){view.directives=options.directives}}if(view.onRender){view.onRender()}return view};Monkberry.prerender=function(template,times){while(times--){template.pool.push(new template)}};Monkberry.loop=function(parent,node,map,template,array,options){var i,j,len,keys,transform,arrayLength,childrenSize=map.length;if(Array.isArray(array)){transform=transformArray;arrayLength=array.length}else{transform=transformObject;keys=Object.keys(array);arrayLength=keys.length}len=childrenSize-arrayLength;for(i in map.items){if(len-- >0){map.items[i].remove()}else{break}}j=0;for(i in map.items){map.items[i].__state__=transform(array,keys,j,options);j++}for(j=childrenSize,len=arrayLength;j<len;j++){var view=Monkberry.render(template,node,{parent:parent,context:parent.context,filters:parent.filters,directives:parent.directives});parent.nested.push(view);i=map.push(view);view.unbind=function(i){return function(){map.remove(i)}}(i);view.__state__=transform(array,keys,j,options)}};Monkberry.cond=function(parent,node,child,template,test){if(child.ref){if(!test){child.ref.remove()}}else if(test){var view=Monkberry.render(template,node,{parent:parent,context:parent.context,filters:parent.filters,directives:parent.directives});parent.nested.push(view);child.ref=view;view.unbind=function(){child.ref=null}}return test};Monkberry.insert=function(parent,node,child,template,data){if(child.ref){child.ref.update(data)}else{var view=Monkberry.render(template,node,{parent:parent,context:parent.context,filters:parent.filters,directives:parent.directives});parent.nested.push(view);child.ref=view;view.unbind=function(){child.ref=null};view.update(data)}};Monkberry.prototype.remove=function(){var i=this.nodes.length;while(i--){this.nodes[i].parentNode.removeChild(this.nodes[i])}if(this.unbind){this.unbind()}i=this.nested.length;while(i--){this.nested[i].remove()}if(this.parent){i=this.parent.nested.indexOf(this);this.parent.nested.splice(i,1);this.parent=null}if(this.onRemove){this.onRemove()}this.constructor.pool.push(this)};Monkberry.prototype.appendTo=function(toNode){for(var i=0,len=this.nodes.length;i<len;i++){toNode.appendChild(this.nodes[i])}};Monkberry.prototype.insertBefore=function(toNode){if(toNode.parentNode){for(var i=0,len=this.nodes.length;i<len;i++){toNode.parentNode.insertBefore(this.nodes[i],toNode)}}else{throw new Error("Can not insert child view into parent node. "+"You need append your view first and then update.")}};Monkberry.prototype.createDocument=function(){if(this.nodes.length==1){return this.nodes[0]}else{var fragment=document.createDocumentFragment();for(var i=0,len=this.nodes.length;i<len;i++){fragment.appendChild(this.nodes[i])}return fragment}};Monkberry.prototype.querySelector=function(query){for(var i=0;i<this.nodes.length;i++){if(this.nodes[i].matches&&this.nodes[i].matches(query)){return this.nodes[i]}if(this.nodes[i].nodeType===8){throw new Error("Can not use querySelector with non-element nodes on first level.")}if(this.nodes[i].querySelector){var element=this.nodes[i].querySelector(query);if(element){return element}}}return null};function Map(){this.items=Object.create(null);this.length=0;this.next=0}Map.prototype.push=function(element){this.items[this.next]=element;this.length+=1;this.next+=1;return this.next-1};Map.prototype.remove=function(i){if(i in this.items){delete this.items[i];this.length-=1}else{throw new Error('You are trying to delete not existing element "'+i+'" form map.')}};Map.prototype.forEach=function(callback){for(var i in this.items){callback(this.items[i])}};Monkberry.Map=Map;function transformArray(array,keys,i,options){if(options){var t={__index__:i};t[options.value]=array[i];if(options.key){t[options.key]=i}return t}else{return array[i]}}function transformObject(array,keys,i,options){if(options){var t={__index__:i};t[options.value]=array[keys[i]];if(options.key){t[options.key]=keys[i]}return t}else{return array[keys[i]]}}if(typeof module!=="undefined"){module.exports=Monkberry}else{window.Monkberry=Monkberry}})(window.document);
